# Name of your application. Used to uniquely configure containers.
service: metahub

# Name of the container image.
image: qnvip-build-group/metahub

labels:
  traefik.http.routers.metahub.rule: Host(`meta.d.qncentury.com`)

# Deploy to these servers.
servers:
  - qnvip-data-186

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  server: registry.cn-hangzhou.aliyuncs.com
  username: wuyaohui@1680296915768283
  # Always use an access token rather than real password when possible.
  password:
    - MRSK_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
env:
#  clear:
#    DB_HOST: 192.168.0.2
  secret:
    - RAILS_MASTER_KEY
    - DATABASE_PASSWORD

# Use a different ssh user than root
ssh:
  user: devops

# Configure builder setup.
builder:
  multiarch: false
  args:
    RUBY_VERSION: 3.2.1
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql.erb:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000
